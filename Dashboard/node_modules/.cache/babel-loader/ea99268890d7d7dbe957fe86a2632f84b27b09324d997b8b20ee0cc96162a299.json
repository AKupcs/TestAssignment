{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artiskupcs.DESKTOP-NJS82NJ\\\\Desktop\\\\TestProject\\\\testui\\\\src\\\\Components\\\\Content.js\",\n  _s = $RefreshSig$();\nimport CleanTechElement from './CleanTechElement';\nimport '../Assets/Styles/Content.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content() {\n  _s();\n  const [sourcesMetrics, setSourcesMetrics] = useState({});\n  const [proxyFetchError, setProxyFetchError] = useState(false);\n\n  /*useEffect(() => {\r\n      makeRequest();\r\n  }, []);*/\n\n  /*useEffect(() => {\r\n      makeRequest();\r\n      const fetchTimeout = setTimeout(() => {\r\n          makeRequest();\r\n      }, 2000);\r\n        return () => {\r\n          clearTimeout(fetchTimeout);\r\n      };\r\n  });*/\n\n  /*const makeRequest = () => {\r\n      fetch('http://localhost:5281/CleanTechProxy')\r\n          .then(response => {\r\n              if (!response.ok) {\r\n                  throw new Error('Request failed');\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(json => {\r\n              setProxyFetchError(false);\r\n              setSourcesMetrics(json);\r\n          })\r\n          .catch(error => {\r\n              setProxyFetchError(true);\r\n          })\r\n          .finally(() => {\r\n              // Schedule the next request after the fetchInterval\r\n              setTimeout(makeRequest, 2000);\r\n          });\r\n            makeRequest();\r\n  };*/\n\n  useEffect(() => {\n    const fetchInterval = 2000; // Adjust this as needed\n\n    const makeRequest = () => {\n      fetch('http://localhost:5281/CleanTechProxy').then(response => {\n        return response.json();\n      }).then(json => {\n        setProxyFetchError(false);\n        setSourcesMetrics(json);\n      }).catch(error => {\n        setProxyFetchError(true);\n      }).finally(() => {\n        // Schedule the next request after the fetchInterval\n        setTimeout(makeRequest, fetchInterval);\n      });\n    };\n\n    // Initial request\n    makeRequest();\n    return () => {\n      // Cleanup code, if needed\n    };\n  }, []);\n  const cleanTechDataRequest = () => {\n    fetch('http://localhost:5281/CleanTechProxy').then(response => response.json()).then(json => {\n      setSourcesMetrics(json);\n      setProxyFetchError(false);\n    }).catch(() => {\n      setProxyFetchError(true);\n    });\n  };\n  const proxyErrorMessage = proxyFetchError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"proxy error message\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this) : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [proxyErrorMessage, Object.keys(sourcesMetrics).length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_elements\",\n      children: [/*#__PURE__*/_jsxDEV(CleanTechElement, {\n        data: sourcesMetrics.windmillData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CleanTechElement, {\n        data: sourcesMetrics.solarPanelData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Content, \"VweP0m/2Wt0graez4ywHBCvCkJI=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["CleanTechElement","useState","useEffect","jsxDEV","_jsxDEV","Content","_s","sourcesMetrics","setSourcesMetrics","proxyFetchError","setProxyFetchError","fetchInterval","makeRequest","fetch","then","response","json","catch","error","finally","setTimeout","cleanTechDataRequest","proxyErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","length","data","windmillData","solarPanelData","_c","$RefreshReg$"],"sources":["C:/Users/artiskupcs.DESKTOP-NJS82NJ/Desktop/TestProject/testui/src/Components/Content.js"],"sourcesContent":["import CleanTechElement from './CleanTechElement';\r\n\r\nimport '../Assets/Styles/Content.css';\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Content() {\r\n    const [sourcesMetrics, setSourcesMetrics] = useState({});\r\n    const [proxyFetchError, setProxyFetchError] = useState(false);\r\n\r\n    /*useEffect(() => {\r\n        makeRequest();\r\n    }, []);*/\r\n\r\n    /*useEffect(() => {\r\n        makeRequest();\r\n        const fetchTimeout = setTimeout(() => {\r\n            makeRequest();\r\n        }, 2000);\r\n\r\n        return () => {\r\n            clearTimeout(fetchTimeout);\r\n        };\r\n    });*/\r\n\r\n    /*const makeRequest = () => {\r\n        fetch('http://localhost:5281/CleanTechProxy')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Request failed');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                setProxyFetchError(false);\r\n                setSourcesMetrics(json);\r\n            })\r\n            .catch(error => {\r\n                setProxyFetchError(true);\r\n            })\r\n            .finally(() => {\r\n                // Schedule the next request after the fetchInterval\r\n                setTimeout(makeRequest, 2000);\r\n            });\r\n\r\n            makeRequest();\r\n    };*/\r\n\r\n    useEffect(() => {\r\n        const fetchInterval = 2000; // Adjust this as needed\r\n\r\n        const makeRequest = () => {\r\n            fetch('http://localhost:5281/CleanTechProxy')\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(json => {\r\n                    setProxyFetchError(false);\r\n                    setSourcesMetrics(json);\r\n                })\r\n                .catch(error => {\r\n                    setProxyFetchError(true);\r\n                })\r\n                .finally(() => {\r\n                    // Schedule the next request after the fetchInterval\r\n                    setTimeout(makeRequest, fetchInterval);\r\n                });\r\n        };\r\n\r\n        // Initial request\r\n        makeRequest();\r\n\r\n        return () => {\r\n            // Cleanup code, if needed\r\n        };\r\n    }, []);\r\n\r\n    const cleanTechDataRequest = () => {\r\n        fetch('http://localhost:5281/CleanTechProxy')\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setSourcesMetrics(json);\r\n            setProxyFetchError(false);\r\n        })\r\n        .catch(() => {\r\n            setProxyFetchError(true);\r\n        })\r\n    }\r\n\r\n    const proxyErrorMessage = proxyFetchError ? (\r\n        <div>proxy error message</div>\r\n    ) : (\r\n        ''\r\n    );\r\n    \r\n    return(\r\n        <div className='content'>\r\n            {proxyErrorMessage}\r\n            {Object.keys(sourcesMetrics).length == 0 ? (\r\n                <div className='loadingScreen' />\r\n            ) : (\r\n                <div className='content_elements'>\r\n                    <CleanTechElement data={sourcesMetrics.windmillData} />\r\n                    <CleanTechElement data={sourcesMetrics.solarPanelData} />\r\n                    \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}