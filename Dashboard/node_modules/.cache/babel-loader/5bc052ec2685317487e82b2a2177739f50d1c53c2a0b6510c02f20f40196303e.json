{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artiskupcs.DESKTOP-NJS82NJ\\\\Desktop\\\\TestProject\\\\testui\\\\src\\\\Components\\\\Content.js\",\n  _s = $RefreshSig$();\nimport CleanTechElement from './CleanTechElement';\nimport '../Assets/Styles/Content.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content() {\n  _s();\n  const [sourcesMetrics, setSourcesMetrics] = useState({});\n  const [proxyFetchError, setProxyFetchError] = useState(false);\n  useEffect(() => {\n    makeRequest();\n  }, []);\n  useEffect(() => {\n    const fetchTimeout = setTimeout(() => {\n      makeRequest();\n    }, 2000);\n    return () => {\n      clearTimeout(fetchTimeout);\n    };\n  });\n  const makeRequest = () => {\n    fetch('http://localhost:5281/CleanTechProxy').then(response => {\n      if (!response.ok) {\n        throw new Error('Request failed');\n      }\n      return response.json();\n    }).then(json => {\n      setProxyFetchError(false);\n      setSourcesMetrics(json);\n    }).catch(error => {\n      setProxyFetchError(true);\n    }).finally(() => {\n      // Schedule the next request after the fetchInterval\n      setTimeout(makeRequest, 2000);\n    });\n  };\n  const cleanTechDataRequest = () => {\n    fetch('http://localhost:5281/CleanTechProxy').then(response => response.json()).then(json => {\n      setSourcesMetrics(json);\n      setProxyFetchError(false);\n    }).catch(() => {\n      setProxyFetchError(true);\n    });\n  };\n  const proxyErrorMessage = proxyFetchError ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"proxy error message\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this) : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [proxyErrorMessage, Object.keys(sourcesMetrics).length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_elements\",\n      children: [/*#__PURE__*/_jsxDEV(CleanTechElement, {\n        data: sourcesMetrics.windmillData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CleanTechElement, {\n        data: sourcesMetrics.solarPanelData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Content, \"ymoVGXtmPkDWuEWYhfSzFIfiruI=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["CleanTechElement","useState","useEffect","jsxDEV","_jsxDEV","Content","_s","sourcesMetrics","setSourcesMetrics","proxyFetchError","setProxyFetchError","makeRequest","fetchTimeout","setTimeout","clearTimeout","fetch","then","response","ok","Error","json","catch","error","finally","cleanTechDataRequest","proxyErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","length","data","windmillData","solarPanelData","_c","$RefreshReg$"],"sources":["C:/Users/artiskupcs.DESKTOP-NJS82NJ/Desktop/TestProject/testui/src/Components/Content.js"],"sourcesContent":["import CleanTechElement from './CleanTechElement';\r\n\r\nimport '../Assets/Styles/Content.css';\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Content() {\r\n    const [sourcesMetrics, setSourcesMetrics] = useState({});\r\n    const [proxyFetchError, setProxyFetchError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        makeRequest();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchTimeout = setTimeout(() => {\r\n            makeRequest();\r\n        }, 2000);\r\n\r\n        return () => {\r\n            clearTimeout(fetchTimeout);\r\n        };\r\n    });\r\n\r\n    const makeRequest = () => {\r\n        fetch('http://localhost:5281/CleanTechProxy')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Request failed');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                setProxyFetchError(false);\r\n                setSourcesMetrics(json);\r\n            })\r\n            .catch(error => {\r\n                setProxyFetchError(true);\r\n            })\r\n            .finally(() => {\r\n                // Schedule the next request after the fetchInterval\r\n                setTimeout(makeRequest, 2000);\r\n            });\r\n    };\r\n\r\n    const cleanTechDataRequest = () => {\r\n        fetch('http://localhost:5281/CleanTechProxy')\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setSourcesMetrics(json);\r\n            setProxyFetchError(false);\r\n        })\r\n        .catch(() => {\r\n            setProxyFetchError(true);\r\n        })\r\n    }\r\n\r\n    const proxyErrorMessage = proxyFetchError ? (\r\n        <div>proxy error message</div>\r\n    ) : (\r\n        ''\r\n    );\r\n    \r\n    return(\r\n        <div className='content'>\r\n            {proxyErrorMessage}\r\n            {Object.keys(sourcesMetrics).length == 0 ? (\r\n                <div className='loadingScreen' />\r\n            ) : (\r\n                <div className='content_elements'>\r\n                    <CleanTechElement data={sourcesMetrics.windmillData} />\r\n                    <CleanTechElement data={sourcesMetrics.solarPanelData} />\r\n                    \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}